[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/biqu/printer_data/comms/klippy.sock

[authorization]
trusted_clients:
    127.0.0.1
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    #192.168.50.46/160  #<--Trust local network machines. Only needed if [authorization] enabled.
    FE80::/10
    ::1/128
cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz
    *:7136  #<--Allow PrettyGCode (port 7136) on all domains (recommended) OR...
    *.local:7136  #<--Allow PrettyGCode (port 7136) on just .*local domain. (more secure I guess)

[octoprint_compat]

# Adds PrettyGCode to Moonrakers update manager
[update_manager pgcode]
type: git_repo
primary_branch: main
origin: https://github.com/Kragrathea/pgcode.git
path: ~/pgcode
is_system_service: False

[history]

[update_manager]
channel: dev
refresh_interval: 168

[file_manager]
enable_object_processing: true

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

# moonraker.conf

[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in there configuration.
output_path: ~/biqu/printer_data/config/timelapse/
##   Directory where the generated video will be saved
frame_path: ~/tmp/timelapse/
##   Directory where the temporary frames are saved
ffmpeg_binary_path: ~/biqu/klipper/ffmpeg/
##   Directory where ffmpeg is installed
#moonraker.conf
enabled: True
mode: layermacro
snapshoturl: http://192.168.50.46/webcam/?action=snapshot
# gcode_verbose: True
# parkhead: False
# parkpos: back_left
# park_custom_pos_x: 0.0
# park_custom_pos_y: 0.0
# park_custom_pos_dz: 0.0
# park_travel_speed: 100
# park_retract_speed: 15
# park_extrude_speed: 15
# park_retract_distance: 1.0
# park_extrude_distance: 1.0
hyperlapse_cycle: 30
autorender: True
constant_rate_factor: 16
output_framerate: 30
pixelformat: yuv420p
time_format_code: %Y%m%d_%H%M
extraoutputparams: -filter_complex "[0]trim=0:5[hold]" 
variable_fps: False
targetlength: 10
variable_fps_min: 5
variable_fps_max: 60
flip_x: False
flip_y: False
duplicatelastframe: 0
previewimage: True
saveframes: True
wget_skip_cert_check: False



[include moonraker-obico-update.cfg]

[update_manager moonraker-telegram-bot]
type: git_repo
path: ~/moonraker-telegram-bot
origin: https://github.com/nlef/moonraker-telegram-bot.git
env: ~/moonraker-telegram-bot-env/bin/python
requirements: scripts/requirements.txt
install_script: scripts/install.sh

[include octoeverywhere-system.cfg]

[update_manager mobileraker]
type: git_repo
path: /home/biqu/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
env: /home/biqu/mobileraker-env/bin/python
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install-mobileraker-companion.sh

# [update_manager klipper-macros]
# type: git_repo
# origin: https://github.com/jschuh/klipper-macros.git
# path: ~/config/klipper-macros # UPDATE THIS FOR YOUR PATH!!!
# primary_branch: main
# is_system_service: False
# managed_services: klipper
